{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "maxLength": 10,
            "minLength": 3,
            "metadata": {
                "description": "The base name to use as prefix to create all the resources."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of App Service."
            }
        },
        "sqlserverName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure SQL Server."
            }
        },
        "databaseName": {
            "type": "string",
            "metadata": {
                "description": "Name of Azure SQL database."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "metadata": {
                "description": "Login user name for the Azure SQL Server. Should use securestring for production."
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "string",
            "metadata": {
                "description": "Login password for the Azure SQL Server. Should use securestring for production."
            }
        }
    },
    "variables": {
        "hostingPlanName": "[toLower(concat(parameters('baseName'),'-asp'))]",
        "webSiteName": "[toLower(concat(parameters('baseName'),'-appsrv'))]",
        "skuName": "F1",
        "skuCapacity": 1,
        "repoURL": "https://github.com/solliancenet/nosql-openhack.git",
        "branch": "master"
    },
    "resources": [
        {
            "apiVersion": "2016-03-01",
            "name": "[variables('hostingPlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "sku": {
                "name": "[variables('skuName')]",
                "capacity": "[variables('skuCapacity')]"
            },
            "properties": {
                "name": "[variables('hostingPlanName')]"
            }
        },
        {
            "apiVersion": "2016-03-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('hostingPlanName')]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName')))]": "empty",
                "displayName": "Website"
            },
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]"
            },
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('webSiteName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "[variables('branch')]",
                        "IsManualIntegration": true
                    }
                },
                {
                    "apiVersion": "2016-03-01",
                    "type": "config",
                    "name": "connectionstrings",
                    "dependsOn": [
                        "[variables('webSiteName')]"
                    ],
                    "properties": {
                        "SqlConnection": {
                            "value": "[concat('Data Source=tcp:', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ',1433;Initial Catalog=', parameters('databaseName'), ';User Id=', parameters('sqlAdministratorLogin'), '@', reference(concat('Microsoft.Sql/servers/', parameters('sqlserverName'))).fullyQualifiedDomainName, ';Password=', parameters('sqlAdministratorLoginPassword'), ';')]",
                            "type": "SQLAzure"
                        }
                    }
                }
            ]
        }
    ],
    "outputs": {
        "siteUri": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Web/sites/', variables('webSiteName'))).hostnames[0]]"
        }
    }
}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "baseName": {
            "type": "string",
            "maxLength": 10,
            "minLength": 3,
            "metadata": {
                "description": "The base name to use as prefix to create all the resources."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for the Cosmos DB account."
            }
        }
    },
    "variables": {
        "namespaceName": "[toLower(concat(parameters('baseName'),'-ehns'))]",
        "eventhubSku": "Standard",
        "skuCapacity": 1,
        "eventHubName": "telemetry",
        "consumerGroupName": "$Default"
    },
    "resources": [
        {
            "apiVersion": "2017-04-01",
            "name": "[variables('namespaceName')]",
            "type": "Microsoft.EventHub/namespaces",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('eventhubSku')]",
                "tier": "[variables('eventhubSku')]",
                "capacity": "[variables('skuCapacity')]"
            },
            "tags": {
                "tag1": "value1",
                "tag2": "value2"
            },
            "properties": {
                "zoneRedundant": false,
                "isAutoInflateEnabled": true,
                "maximumThroughputUnits": 2,
                "kafkaEnabled": false
            },
            "resources": [
                {
                    "apiVersion": "2017-04-01",
                    "name": "[variables('eventHubName')]",
                    "type": "eventhubs",
                    "dependsOn": [
                        "[concat('Microsoft.EventHub/namespaces/', variables('namespaceName'))]"
                    ],
                    "properties": {
                        "messageRetentionInDays": 4,
                        "partitionCount": 2,
                        "status": "Active"
                    },
                    "resources": [
                        {
                            "apiVersion": "2017-04-01",
                            "name": "[variables('consumerGroupName')]",
                            "type": "consumergroups",
                            "dependsOn": [
                                "[variables('eventHubName')]"
                            ],
                            "properties": {
                                "userMetadata": "User Metadata goes here"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "outputs": {
    }
}
# Action Requires
# 1. Setup the AZURE_FUNCTIONAPP_PUBLISH_PROFILE secrets in your GitHub Repository
# 2. Replace AZURE_FUNCTIONAPP_NAME and AZURE_FUNCTIONAPP_PACKAGE_PATH
#    with your Azure function app name and app path respectively
# 3. Add this yaml file to your project's .github/workflows/
# 4. Push your local project to your GitHub Repository

name: az_func_node_wf

on:
  push:
    branches:
    - master

env:
  AZURE_FUNCTIONAPP_NAME: nosqlkwf-func         # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './functions' # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '12.x'                          # set this to the node version to use (supports 8.x, 10.x, 12.x)

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Install Azure Functions extensions'
      shell: bash
      run: |
        # If your function app project is not located in your repository's root
        # Please change your directory for pip in pushd
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
        popd

    - name: 'Resolve Project Dependencies Using Npm'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        npm install
        npm run build --if-present
        npm run test --if-present
        popd

    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: 'use the published functionapp url in upcoming steps'
      run: |
        echo "${{ steps.fa.outputs.app-url }}"
